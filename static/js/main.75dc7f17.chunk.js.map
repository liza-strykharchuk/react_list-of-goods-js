{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","sortReverse","setSortReverse","updateGoods","goods","alphOrLength","reversed","newGoods","reverse","sort","good1","good2","length","localeCompare","getNewSort","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SAqCnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACMC,EAtCR,SAAoBC,EAAOC,EAAcC,GACvC,IAAMC,EAAQ,YAAOH,GAErB,OAAKC,GAAgBC,EACZC,EAASC,WAGdH,GACFE,EAASE,MAAK,SAACC,EAAOC,GACpB,OAAQN,GACN,KAAKT,EACH,OAAIc,EAAME,SAAWD,EAAMC,OAClBN,EACHK,EAAMC,OAASF,EAAME,OACrBF,EAAME,OAASD,EAAMC,OAGpBN,EACHK,EAAME,cAAcH,GACpBA,EAAMG,cAAcF,GAE1B,KAAKhB,EACH,OAAOW,EACHK,EAAME,cAAcH,GACpBA,EAAMG,cAAcF,GAE1B,QACE,OAAO,MAKRJ,GAMaO,CAAWpB,EAAiBK,EAAWE,GAE3D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBACPhB,IAAcJ,EACV,WACA,IAENsB,QAAS,WACPjB,EAAaL,IARjB,iCAcA,wBACEqB,KAAK,SACLD,UAAS,oCACPhB,IAAcH,EACV,WACA,IAENqB,QAAS,WACPjB,EAAaJ,IARjB,4BAcA,wBACEoB,KAAK,SACLD,UAAS,oCACPd,EACI,GACA,YAENgB,QAAS,WACPf,GAAgBD,IARpB,sBAcgB,KAAdF,GAAoBE,IACpB,wBACEe,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPjB,EAAa,IACbE,GAAe,IALnB,sBAaJ,6BACGC,EAAYe,KAAI,SAAAC,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCxHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.75dc7f17.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getNewSort(goods, alphOrLength, reversed) {\n  const newGoods = [...goods];\n\n  if (!alphOrLength && reversed) {\n    return newGoods.reverse();\n  }\n\n  if (alphOrLength) {\n    newGoods.sort((good1, good2) => {\n      switch (alphOrLength) {\n        case SORT_FIELD_LENGTH:\n          if (good1.length !== good2.length) {\n            return reversed\n              ? good2.length - good1.length\n              : good1.length - good2.length;\n          }\n\n          return reversed\n            ? good2.localeCompare(good1)\n            : good1.localeCompare(good2);\n\n        case SORT_FIELD_ALPHABET:\n          return reversed\n            ? good2.localeCompare(good1)\n            : good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return newGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [sortReverse, setSortReverse] = useState(false);\n  const updateGoods = getNewSort(goodsFromServer, sortField, sortReverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${\n            sortField !== SORT_FIELD_ALPHABET\n              ? 'is-light'\n              : ''\n          }`}\n          onClick={() => {\n            setSortField(SORT_FIELD_ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-info is-success ${\n            sortField !== SORT_FIELD_LENGTH\n              ? 'is-light'\n              : ''\n          }`}\n          onClick={() => {\n            setSortField(SORT_FIELD_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-info is-warning ${\n            sortReverse\n              ? ''\n              : 'is-light'\n          }`}\n          onClick={() => {\n            setSortReverse(!sortReverse);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== '' || sortReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setSortReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {updateGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}